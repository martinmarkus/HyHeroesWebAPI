{
  "Logging": {
    "File": {
      "LogLevel": {
        "Default": "Information",
        "Microsoft": "Warning",
        "Hangfire": "Warning"
      }
    }
  },
  "AllowedHosts": "*",

  "ConnectionStrings": {
    "DbConnection": "server=localhost;port=3306;database=hyheroesdb;uid=webapi-admin;password=v_9AVY%u1EB!yPs6h;Convert Zero Datetime=True"
  },

  "AppSettings": {

    // General infrastructure settings
    "AuthenticationSecretKey": "jZJy5oJ3pnibiZMdBdLqINcD",
    "SessionTokenValidityMins": "30",
    "IPValidatorSecretKey": "Ywg3CQJdcYuGD07rqV56kBJZJ7P4Jmu3",
    "EmailVerifyCodeLimitPerHour": "3",

    // Secret key for game server integration, for calling purchase validation auth. Must passed in request header
    "IntegrationKey": "31EB69562YJF1LD5DW69EZ9UCHG3DBQIAY22GS1M4J17ZJ2RNR2IQP3SPTFWE2QF",

    // Secret key for auth data sync on game server-side user login. Must passed in request header
    "ExternalAuthKey": "31EB692YJFUCHWE22SPTFWE2Q",

    // Absolute path for zip code xls
    "ZipCodesFilePath": "./iranyitoszamok.xls",

    // Only works if the API runs from DEV environment.
    // The API simulates mock player stat data after every given seconds.
    // Min value: 60; Turn off: -1
    "OnlinePlayerSimulatorInterval": 60,

    "IpBlacklistOptions": {
      // If the incoming call count reaches this value, it is counted as dangerous caller IP
      "DangerousCallCount": 30,

      // If the time between a certain caller's requests less than this value,
      // it is counted as dangerous caller IP
      "DangerousMillisecsBetweenCalls": 1000
    },

    "MinimumKreditGiftAmount": "100",

    "DiscordSettings": {
      "UseDiscordIntegration": true,
      "CommandPrefix": "!hh",
      "BotTokenBase64": "T0RFMk1ERTJNemt6TWpjNE5EVTFPRFl3LllEMDBmUS5rVTdYTm5uWVlwV21MSXFlRFhtcW9ER3d2Wm8=",
      "PublicNewsChannelId": 429021752094490664,
      "PrivateStaffChannelId": 816044435561119774,
      "PurchaseMessage": "{0}\n**Vásárlási tranzakció zárult le** (számlázási kérelem kiküldve)\nVásárló felhasználónév: **{1}**\nVásárolt kreditmennyiség: **{2} Kredit**\nElköltött összeg: **{3} HUF**\nFizetési mód: **{4}**",

      // Customizable commands with simple text response 
      "CustomCommands": [
        {
          "Command": "test1",
          "ResponseText": "Test message one :100:"
        },
        {
          "Command": "test2",
          "ResponseText": "Test message two :eyes:"
        },
        {
          "Command": "test3",
          "ResponseText": "Test message three :melon:"
        }
      ]
    },

    // SMTP host for email sending
    "SmtpHost": {
      "Host": "smtp.gmail.com",
      "Port": 587,
      "UserName": "email",
      "Password": "password",
      "EnableSsl": "true"
    },

    // Email settings for email verification process
    "EmailVerifyMailOptions": {
      "SenderName": "HyHeroes.hu",
      "SenderEmail": "noreply@hyheroes.hu",
      "Subject": "Email megerősítése",
      "BodyWithHtml": "<h3>Kérlek kattints az alábbi linkre a visszaigazoláshoz: {verifyLink} </h3>",
      "VerificationSuccessRedirect": "https://dev.hyheroes.hu/#/emailMegerositve",
      "VerificationFailRedirect": "https://dev.hyheroes.hu/#/emailMegerositesSikertelen"
    },

    // Email settings for password reset process
    "PasswordResetMailOptions": {
      "SenderName": "HyHeroes.hu",
      "SenderEmail": "passwordreset@hyheroes.hu",
      "Subject": "Jelszó helyreállítása",
      "BodyWithHtml": "<h3>Kérlek kattints az alábbi linkre a jelszavad lecseréléséhez: {verifyLink} </h3>",
      "PasswordResetSuccessRedire-ct": "https://dev.hyheroes.hu/#/jelszoHelyreallitasa?resetCode={resetCode}",
      "PasswordResetFailRedirect": "https://dev.hyheroes.hu/#/ervenytelenJelszoHelyreallito"
    },

    // Szamlazz.hu settings
    "SzamlazzHuConfig": {
      "SzamlaAgentKulcs": "45p75dszkcjtsngibdszkcjp8usjndszkcj2w7k8md",
      "SzamlaszamElotag": "TMM"
    },

    "BillingoBillingSettings": {
      "BillingoApiRoute": "https://api.billingo.hu/v3",
      "BillingoApiKey": "1526d0b4-7208-11eb-a405-06ac9760f844",

      // Billingo product settings
      "Vat": "0%",
      "Unit": "DARAB",
      "Entitlement": "AAM",
      "BillableProductName": "Kredit",
      "BillableProductComment": "Virtuális fizetőeszköz",
      "UnitPriceType": "gross",

      // Billingo document settings
      "Language": "hu",
      "Currency": "HUF",

      // Type of all generated invoice. "Invoice" is the default.
      "Type": "invoice",

      "ConversionRate": 1,

      // IMPORTANT: Only modify, if Billingo has modified it!
      "ConstantBlockIdValue": 97664,

      "BillingoBankAccount": {
        "BankName": "OTP Bank Nyrt.",
        "AccountNumber": "11111111-22222222-33333333",
        "AccountNumberIban": null,
        "Swift": null,
        "Currency": "HUF",
        "NeedQr": false
      }
    },

    // General seller data for invoice generating
    "SellerData": {
      "EladoBank": "OTP",
      "EladoBankszamlaszam": "11111111-22222222-33333333",
      "EladoEmailReplyTo": "martinmarkus0@gmail.com",
      "EladoEmailSzoveg": "Egy új számla került kiállításra a szamlazz.hu rendszerén keresztül.",
      "EladoEmailTargy": "Számla kiállítva - HyHeroes.hu"
    },

    "CustomBarionSettings": {
      // Barion api route
      "BaseUrl": "https://api.test.barion.com/",

      // Secret barion account key
      "POSKey": "9d1f4a726af84649bea26611a3fdb171",
      "BarionShopEmail": "martinmarkus0@gmail.com",
      "RedirectURL": "https://dev.hyheroes.hu:440/#/BarionPaymentFinished",
      "CallbackURL": "https://dev.hyheroes.hu/API/Currency/CallbackBarionPayment"
    },

    "BarionPurchaseTypes": [
      {
        "GrossPrice": "300",
        "KreditValue": "400"
      },
      {
        "GrossPrice": "500",
        "KreditValue": "700"
      },
      {
        "GrossPrice": "1000",
        "KreditValue": "1300"
      },
      {
        "GrossPrice": "2000",
        "KreditValue": "2600"
      },
      {
        "GrossPrice": "3000",
        "KreditValue": "3900"
      },
      {
        "GrossPrice": "5000",
        "KreditValue": "6500"
      }
    ],

    // This seller data will be displayed for the client to perform the bank transfer
    "BankTransferSellerData": {
      "SellerAccountOwner": "Márkus Martin ev.",
      "SellerBankName": "OTP Bank Nyrt.",
      "AccountNumber": "11111111-11111111-00000000"
    },

    "BankTransferPurchaseTypes": [
      {
        "GrossPrice": "3000",
        "KreditValue": "4000"
      },
      {
        "GrossPrice": "5000",
        "KreditValue": "7000"
      },
      {
        "GrossPrice": "10000",
        "KreditValue": "13000"
      },
      {
        "GrossPrice": "20000",
        "KreditValue": "26000"
      },
      {
        "GrossPrice": "30000",
        "KreditValue": "39000"
      },
      {
        "GrossPrice": "50000",
        "KreditValue": "65000"
      }
    ],

    "PayPalConfig": {
      "Client": "AVo-OBGG-LeSyr4ZPQtPTwVn6fxWkyH7KWxIC6wgaGgoCDr-ewRfzlZMzt5OObmnYzHQZaIMo2lhg393",
      "Secret": "EHfKpDSxrm0o6USYj7X7KQ129aiwk2E4QMnkCXSJwUD1H_vCTXY_t5_Uaw5kLYdmKL_P0V1CsrAlrisS",
      "PayPalAPI": "https://api.sandbox.paypal.com"
    },

    "PayPalPurchaseTypes": [
      {
        "GrossPrice": "200",
        "KreditValue": "400"
      },
      {
        "GrossPrice": "500",
        "KreditValue": "1000"
      },
      {
        "GrossPrice": "3000",
        "KreditValue": "7000"
      }
    ],

    "JatekFizetesOptions": {
      // Fix route for jatekfizetes API
      "APIRoute": "https://jatekfizetes.hu/sms_kod_api.php",

      // Unique secret key for jatekfizetes account
      "APIKey": "CvfPc8EAPmBXOOf5dNHvtFFuHkgSVr",

      // Jatekfizetes requires the IP address of this caller API for validation
      "ThirdPartyIPResponse": "213.222.166.131",

      "ErmeForrasPanel": "https://jatekfizetes.hu/sms_fizetes.php?ermeforras=hyheroesteszt"
    },

    "EDSMSPurchaseTypes": [
      {
        "GrossPrice": "330",
        "KreditValue": "300"
      },
      {
        "GrossPrice": "508",
        "KreditValue": "500"
      },
      {
        "GrossPrice": "1016",
        "KreditValue": "1000"
      },
      {
        "GrossPrice": "2032",
        "KreditValue": "2000"
      },
      {
        "GrossPrice": "5080",
        "KreditValue": "5100"
      }
    ],

    // Notification messages. Note that the '{0}, {1}, etc...' parameters are required
    "NotificationMessages": {
      "KreditGiftMessage": "'{0}' utalt neked {1} Kreditet, ami hozzáíródott az egyenlegedhez.",
      "InvoiceNotificationMessage": "Számlád generálódott, amit elküldtünk neked az alábbi email címre: {0}. Ha nem találod az email-t, kérlek vedd fel velünk a kapcsolatot.",
      "KreditPurchaseMessage": "Jóváírtunk '{0}' Kreditet a(z) '{1}' módon kiegyenlített tranzakciód után. Köszönjük a vásárlást!"
    },

    // Only the following countries will be accepted for billing transaction
    "AcceptedCountries": [
      {
        "CountryName": "Hungary",
        "CountryCode": "HU"
      },
      {
        "CountryName": "United Kingdom",
        "CountryCode": "GB"
      },
      {
        "CountryName": "Serbia",
        "CountryCode": "RS"
      },
      {
        "CountryName": "Germany",
        "CountryCode": "DE"
      }
    ]
  }
}
